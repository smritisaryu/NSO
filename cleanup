#!/bin/bash

openrc="$1"
tag="$2"
network_name="${tag}_network"
sshconfig="config"
hostsfile="hosts"

source "$openrc"
echo "$(date) initiating cleanup.."
echo "$(date) cleaning up allocated resources with tag $2"
echo "$(date) Checking if servers exists..."
for server_name in $(openstack server list --name "$tag" -f value -c Name 2>/dev/null); do
    echo "$(date) Deleting server: $server_name"
    openstack server delete "$server_name"
done

echo "$(date) Releasing floating ips from servers..."

# Read the content of the files into variables
if [[ -f "f1" ]]; then
   floating_ip1=$(cat f1)
   echo "$(date) Deleting Floating IP: $floating_ip1"
   openstack floating ip delete "$floating_ip1"
fi

if [[ -f "f2" ]]; then
   floating_ip2=$(cat f2)
   echo "$(date) Deleting Floating IP: $floating_ip2"
   openstack floating ip delete "$floating_ip2"
fi

# Store the IPs in an array
#floating_ips=("$floating_ip1" "$floating_ip2")

#if [ ${#floating_ips[@]} -gt 0 ]; then
 #   echo "$(date) Deleting Floating IPs.."
  #  for ip in "${floating_ips[@]}"; do
   #     if openstack floating ip show "$ip" &>/dev/null; then
            #echo "$(date) Checking and Deleting Floating IPs"
    #        openstack floating ip delete "$ip"
     #   else
      #      echo "Floating IP $ip not found. Skipping deletion."
       # fi
   # done
   # echo "$(date) Floating IPs deleted"
#else
 #   echo "No Floating IPs to delete."
#fi



# router check
router_name="${tag}_router"
subnet_name="${tag}_subnet"
#subnet_id=$(openstack subnet list --name "$subnet_name" -f value -c ID 2>/dev/null)
echo "$(date) Checking if subnets exists..."
subnets=$(openstack subnet list --name "$subnet_name" -f value -c ID 2>/dev/null)
if [ -n "$subnets" ]; then
    echo "$(date) subnets found"
else
    echo "$(date) No subnets found"
fi

subnet_id=$(openstack subnet list --name "$subnet_name" -c ID -f value)
echo "$(date) Checking if subnet is added to the router..."
if [ -n "$subnet_id" ]; then
  for sub in $subnet_id; do
    openstack router remove subnet "$router_name" "$sub"
    #openstack subnet delete "$sub"
  done
  #echo "$(date) Deleted subnet $subnet_name"
else
  echo "$(date) No subnet $subnet_name to remove"
fi

routers=$(openstack router list --column "Name" --format "value" | grep "$router_name")
echo "$(date) Checking for Routers..."
count=$(echo "$routers" | wc -l)  # Count the number of routers

if [ "$count" -gt 0 ]; then
    echo "$(date) Deleting Routers..."
    for router in $routers; do
        openstack router delete "$router"
        echo "$(date) deleted "$router""
    done
else
    echo "$(date) No routers exist with the specified tag"
fi
echo "$(date) deleting virtual port.."
vip_port="${tag}_vip"
if openstack port show "$vip_port" >/dev/null 2>&1; then
    # Port exists, so delete it
    openstack port delete "$vip_port"
    echo "$(date) Virtual Port '$vip_port' deleted successfully."
else
    echo "$(date) No Virtual Port exist with '$vip_port'"
fi

subnets=$(openstack subnet list --name "$subnet_name" -f value -c ID 2>/dev/null)
echo "$(date) Checking if subnets exists..."
if [ -n "$subnets" ]; then
    echo "$(date) Deleting subnets:..."
    for subnet_id in $subnets; do
        echo "$(date) Deleting subnet: $subnet_id"
        openstack subnet delete "$subnet_id"
    done
else
    echo "$(date) No subnets found"
fi


# Check if network exists
network_id=$(openstack network show "$network_name" -f value -c id 2>/dev/null)
echo "$(date) checking if network exists..."
if [ -n "$network_id" ]; then
    echo "$(date) Network exists with ID: $network_id"
    echo "$(date) Deleting network: $network_name"
    openstack network delete "$network_id"
else
    echo "$(date) Network $network_name does not exist"
fi


security_groups=$(openstack security group list --column "Name" --format "value" | grep "$tag")
echo "$(date) Checking for Security Groups..."
count=$(echo "$security_groups" | wc -l)  # Count the number of security groups

if [ "$count" -gt 0 ]; then
    echo "$(date) Deleting Security Groups..."
    for security_group in $security_groups; do
        openstack security group delete "$security_group"
    done
else
    echo "$(date) No security groups exist with the specified tag"
fi


# List key pairs with the specified tag
keypairs=$(openstack keypair list -f value -c Name | grep "$tag_keypair")
echo "$(date) Checking for keypairs..."
count=$(echo "$keypairs" | wc -l)  # Count the number of key pairs

if [ "$count" -gt 0 ]; then
    echo "$(date) Deleting Key Pairs:..."
    for keypair in $keypairs; do
        openstack keypair delete "$keypair"
    done
else
    echo "$(date) No key pairs exist with the specified tag"
fi

echo "$(date) Deleting ssh config file"
if [[ -f "$sshconfig" ]] ; then
    rm "$sshconfig"
fi
echo "$(date) Deleting hosts file"
if [[ -f "$hostsfile" ]] ; then
    rm "$hostsfile"
fi
echo "$(date) Deleting auxiliary files created"
if [[ -f "f1" ]] ; then
    rm "f1"
fi
if [[ -f "f2" ]] ; then
    rm "f2"
fi


if [[ -f "unassigned" ]] ; then
    rm "unassigned"
fi
echo "$(date) Deleting vipaddr"
if [[ -f "vip" ]] ; then
  rm "vip"
fi
echo "$(date) cleaning up in process.."
if [[ -f "dev_count.txt" ]] ; then
  rm "dev_count.txt"
fi

echo "$(date) CLEANUP COMPLETED"
